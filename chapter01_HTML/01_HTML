1. WEB의 구조
    - 인터넷 상에서 동작하는 서비스의 일종
    - HTTP 프로토콜, 하이퍼텍스트, HTML 형식 등을 사용하여 그림과 문자를 교환하는 전송방식


2. HTTP(Hypertext Transfer Protocol)
    1) 클라이언트와 서버가 서로 통신할 수 있게 하기 위한 언어를 정의하는 어플리케이션 규약
	    * 클라이언트(Client) : 네트워크 프로그램에서 요청하는 쪽
	    * 서버(Server) : 요청을 받아 알맞은 기능이나 데이터를 제공하는 쪽
    2) 웹 서버가 HTML을 포함한 이미지, 동영상등 데이터를 주고 받을 때 사용하는 프로토콜
        * 프로토콜(Protocol) : 데이터가 어떻게 웹을 건너 여행해야 하는지 정의하는 통신 규약


3. HTML(HyperText Markup Language)
    1) 웹 페이지를 만들 때 사용하는 표준 언어(프로그래밍 언어 X)
        (1) Markup Language : 태그 등을 이용하여 데이터의 구조를 명기시키는 언어
    2) 여러 태그들로 구성되며, 웹 페이지의 디자인이나 기능을 결정
    3) 대부분 여는 태그(Opening tag), 닫는 태그(Closing tag), 내용(Content), 요소(Element)로 구성
		
	   여는 태그				내용						닫는 태그
		<p>        안녕하세요. HTML 수업 시간 입니다.        </p>
	
 <html lang="ko">
 	<head>
 		<meta charset="utf-8">
 		<title>웹 프로그래밍 시작</title>
 	</head>
	<body>
		<div id="index" class="well">
			<a id="mainServer" ...생략>
				<span class="img_vert"> 주요 정보 바로가기 </span>
			</a>
		</div>
	</body>
 </html>


4. DNS(Domain Name System)
    1) 호스트의 도메인 이름을 호스트의 네트워크 주소로 바꾸거나 그 반대의 변환을 수행할 수 있도록 하기 위해 개발
    2) 웹 브라우저와 웹 서버는 IP 주소를 이용해서 연결하기 때문에 도메인 이름을 IP 주소로 변환할 필요가 있는데
 	    이 때 사용하는 것이 DNS(Domain Name System)이다.


5. URL과 웹 페이지
    ex) http://www.11st.co.kr/html/category/1.html?xzone=ctgr1^html
    
      	프로토콜	서버 이름				경로				쿼리
 	1) (http)://(www.11st.co.kr)/(html/category/1.html)?(xzone=ctgr1^html)
	 	(1) 프로토콜	: 웹 브라우저가 서버와 내용을 주고받을 때 사용하는 규칙
	 	(2) 서버 이름	: 웹 페이지를 요청할 서버의 이름을 지정.
	 	(3) 경로		: 웹 페이지의 상세 주소에 해당한다.
	 	(4) 쿼리 문자열	: 추가로 서버에 보내는 데이터.
 
 	
 							D N S
							∧	│
 		1. www.11st.co.kr	│	│	2. IP 주소 응답
                ip 요청		│	│
 							│	│
 							│	∨		3. http://www.11st.co.kr/html/main.html 요청
						    웹	───────────────────────────────────────────────────>	웹
						    브라우저 <────────────────────────────────────────────────── 서버
 														4. HTML 응답
 														


6. 웹 프로그래밍
    - 웹사이트 혹은 웹 페이지를 만드는 과정으로 웹 사이트에 접속했을 때 보이는 화면을 구성하는 것들을 만들어 내는 작업.
    - Python, Ruby, Java 등 서버 컴퓨터쪽에서 동작하는 코드를 작성(백 엔드/서버 사이드)
    - HTML, CSS, JavaScript 같은 웹 브라우저 단에서 동작하는 기술을 이용(프론트 엔드/클라이언트 사이드)
        (1) HTML : 페이지의 구성, 뼈대를 담당
        (2) CSS : HTML 요소에 색상, 크기 등 디자인적인 요소를 적용
        (3) JavaScript : 이미 만들어진 페이지의 내용을 변경하거나 페이지 구성물들에 움직임을 부여하는 등 종적인 일을 처리